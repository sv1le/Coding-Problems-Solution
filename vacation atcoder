int max_points(vector < vector <int>> &vec , int n )
{
    int dp[n][3];
    //Base Case
    for (int i = 0; i < 3 ; ++i)
        dp[0][i] = vec[0][i];
    for (int i = 1; i < n; ++i) {
        for (int j = 0; j < 3; ++j) {
            dp[i][j] = 0;
            for (int k = 0; k < 3; ++k) {
                if (j != k) {
                    dp[i][j] = max(dp[i][j], dp[i - 1][k] + vec[i][j]);
                }
            }
        }
    }
 
 
    return max (dp[n  - 1][0], max(dp[n - 1][1], dp[n - 1][2]));
}
 
int main()
{
    int n;
    cin >> n;
    vector < vector <int>> vec(n, vector <int> (3));
    for (int i = 0 ; i < n ; ++i)
        for (int j = 0 ; j < 3 ; ++j)
            cin >> vec[i][j];
 
    cout << max_points (vec, n) << endl;
    return 0;
}
